# -*- coding: utf-8 -*-
# Generated by https://github.com/verloop/twirpy/protoc-gen-twirpy.  DO NOT EDIT!
# source: protobuf/sui_challenge.proto

from google.protobuf import symbol_database as _symbol_database

from twirp.base import Endpoint
from twirp.server import TwirpServer
from twirp.client import TwirpClient

_sym_db = _symbol_database.Default()

class SuiChallengeServer(TwirpServer):

	def __init__(self, *args, service, server_path_prefix="/twirp"):
		super().__init__(service=service)
		self._prefix = F"{server_path_prefix}/chainflag.ctf.sui_challenge.SuiChallenge"
		self._endpoints = {
			"GetChallengeInfo": Endpoint(
				service_name="SuiChallenge",
				name="GetChallengeInfo",
				function=getattr(service, "GetChallengeInfo"),
				input=_sym_db.GetSymbol("chainflag.ctf.sui_challenge.Empty"),
				output=_sym_db.GetSymbol("chainflag.ctf.sui_challenge.Info"),
			),
			"NewPlayground": Endpoint(
				service_name="SuiChallenge",
				name="NewPlayground",
				function=getattr(service, "NewPlayground"),
				input=_sym_db.GetSymbol("chainflag.ctf.sui_challenge.Empty"),
				output=_sym_db.GetSymbol("chainflag.ctf.sui_challenge.Playground"),
			),
			"DeployContract": Endpoint(
				service_name="SuiChallenge",
				name="DeployContract",
				function=getattr(service, "DeployContract"),
				input=_sym_db.GetSymbol("chainflag.ctf.sui_challenge.Empty"),
				output=_sym_db.GetSymbol("chainflag.ctf.sui_challenge.Contract"),
			),
			"GetFlag": Endpoint(
				service_name="SuiChallenge",
				name="GetFlag",
				function=getattr(service, "GetFlag"),
				input=_sym_db.GetSymbol("chainflag.ctf.sui_challenge.Event"),
				output=_sym_db.GetSymbol("chainflag.ctf.sui_challenge.Flag"),
			),
			"GetSourceCode": Endpoint(
				service_name="SuiChallenge",
				name="GetSourceCode",
				function=getattr(service, "GetSourceCode"),
				input=_sym_db.GetSymbol("chainflag.ctf.sui_challenge.Empty"),
				output=_sym_db.GetSymbol("chainflag.ctf.sui_challenge.SourceCode"),
			),
		}

class SuiChallengeClient(TwirpClient):

	def GetChallengeInfo(self, *args, ctx, request, server_path_prefix="/twirp", **kwargs):
		return self._make_request(
			url=F"{server_path_prefix}/chainflag.ctf.sui_challenge.SuiChallenge/GetChallengeInfo",
			ctx=ctx,
			request=request,
			response_obj=_sym_db.GetSymbol("chainflag.ctf.sui_challenge.Info"),
			**kwargs,
		)

	def NewPlayground(self, *args, ctx, request, server_path_prefix="/twirp", **kwargs):
		return self._make_request(
			url=F"{server_path_prefix}/chainflag.ctf.sui_challenge.SuiChallenge/NewPlayground",
			ctx=ctx,
			request=request,
			response_obj=_sym_db.GetSymbol("chainflag.ctf.sui_challenge.Playground"),
			**kwargs,
		)

	def DeployContract(self, *args, ctx, request, server_path_prefix="/twirp", **kwargs):
		return self._make_request(
			url=F"{server_path_prefix}/chainflag.ctf.sui_challenge.SuiChallenge/DeployContract",
			ctx=ctx,
			request=request,
			response_obj=_sym_db.GetSymbol("chainflag.ctf.sui_challenge.Contract"),
			**kwargs,
		)

	def GetFlag(self, *args, ctx, request, server_path_prefix="/twirp", **kwargs):
		return self._make_request(
			url=F"{server_path_prefix}/chainflag.ctf.sui_challenge.SuiChallenge/GetFlag",
			ctx=ctx,
			request=request,
			response_obj=_sym_db.GetSymbol("chainflag.ctf.sui_challenge.Flag"),
			**kwargs,
		)

	def GetSourceCode(self, *args, ctx, request, server_path_prefix="/twirp", **kwargs):
		return self._make_request(
			url=F"{server_path_prefix}/chainflag.ctf.sui_challenge.SuiChallenge/GetSourceCode",
			ctx=ctx,
			request=request,
			response_obj=_sym_db.GetSymbol("chainflag.ctf.sui_challenge.SourceCode"),
			**kwargs,
		)
